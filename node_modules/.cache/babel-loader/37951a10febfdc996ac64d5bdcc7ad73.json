{"ast":null,"code":"var _jsxFileName = \"/Users/anshujai/Downloads/refillapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Amplify, { graphqlOperation } from \"aws-amplify\";\nimport { Connect } from \"aws-amplify-react\";\nimport * as queries from './graphql/queries';\nimport * as subscriptions from './graphql/subscriptions';\n\nclass App extends Component {\n  render() {\n    const ListView = ({\n      todos\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"All Todos\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, todos.map(todo => React.createElement(\"li\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, todo.name, \" (\", todo.id, \")\"))));\n\n    return React.createElement(Connect, {\n      query: graphqlOperation(queries.listTodos),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, ({\n      data: {\n        listTodos\n      },\n      loading,\n      errors\n    }) => {\n      if (errors) return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Error\");\n      if (loading || !listTodos) return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Loading...\");\n      return listTodos && React.createElement(ListView, {\n        todos: listTodos.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/anshujai/Downloads/refillapp/src/App.js"],"names":["React","Component","Amplify","graphqlOperation","Connect","queries","subscriptions","App","render","ListView","todos","map","todo","id","name","listTodos","data","loading","errors","items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,IAAkBC,gBAAlB,QAA2C,aAA3C;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,yBAA/B;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAExBO,EAAAA,MAAM,GAAG;AAEL,UAAMC,QAAQ,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,IAAxB,QAAgCF,IAAI,CAACC,EAArC,MAAlB,CADL,CAFJ,CADJ;;AASA,WACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEV,gBAAgB,CAACE,OAAO,CAACU,SAAT,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAED,QAAAA;AAAF,OAAR;AAAuBE,MAAAA,OAAvB;AAAgCC,MAAAA;AAAhC,KAAD,KAA8C;AAC3C,UAAIA,MAAJ,EAAY,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAR;AACZ,UAAID,OAAO,IAAI,CAACF,SAAhB,EAA2B,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR;AAC3B,aAAQA,SAAS,IAAI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,SAAS,CAACI,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB;AACH,KALL,CADJ;AASH;;AAtBuB;;AAyB5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Amplify, { graphqlOperation }  from \"aws-amplify\";\nimport { Connect } from \"aws-amplify-react\";\n\nimport * as queries from './graphql/queries';\nimport * as subscriptions from './graphql/subscriptions';\n\nclass App extends Component {\n\n    render() {\n\n        const ListView = ({ todos }) => (\n            <div>\n                <h3>All Todos</h3>\n                <ul>\n                    {todos.map(todo => <li key={todo.id}>{todo.name} ({todo.id})</li>)}\n                </ul>\n            </div>\n        );\n\n        return (\n            <Connect query={graphqlOperation(queries.listTodos)}>\n                {({ data: { listTodos }, loading, errors }) => {\n                    if (errors) return (<h3>Error</h3>);\n                    if (loading || !listTodos) return (<h3>Loading...</h3>);\n                    return (listTodos && <ListView todos={listTodos.items} /> );\n                }}\n            </Connect>\n        )\n    }\n} \n\nexport default App;"]},"metadata":{},"sourceType":"module"}